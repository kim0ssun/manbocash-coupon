{"version":3,"sources":["components/firebase.js","components/StoreStatus.js","components/StoreHome.js","components/NotFound.js","components/ProductDetail.js","components/ProductSale.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","displayImage","displayName","cash","Box","display","bgcolor","height","px","py","alignItems","justifyContent","Avatar","src","alt","Typography","fontSize","to","style","padding","width","textAlign","borderRadius","color","p","minWidth","db","firestore","useStyles","makeStyles","theme","list","background","listItem","marginBottom","itemImage","paddingLeft","large","spacing","itemDesc","items","handleUser","handleItems","history","useHistory","classes","uid","useParams","useState","page","setPage","isBottom","setIsBottom","setDisplayName","setDisplayImage","setCash","scrollHandler","_","innerHeight","window","scrollHeight","document","body","documentElement","scrollTop","prev","useEffect","unsubscribe","subscribe","tmpItems","collection","orderBy","limit","get","then","snapshot","forEach","el","push","data","doc","onSnapshot","photoUrl","nickName","Number","scrollTo","StoreStatus","List","className","component","map","goodsImgS","goodsCode","goodsName","brandName","realPrice","ListItem","button","onClick","event","console","log","handleListItemClick","key","ListItemAvatar","variant","ListItemText","primary","secondary","root","small","btn_buy","cursor","goods_code","useLocation","isLoad","setLoad","goodsImgB","setGoodsImgB","setGoodsCode","content","setContent","setRealPrice","setGoodsName","setBrandName","brandIconImg","setBrandIconImg","user","useContext","UserContext","filter","item","pb","m","lineHeight","split","line","medium","divider","backgroundColor","setItem","tmpItem","pr","Divider","parseInt","pt","textDecoration","React","createContext","App","setItems","setUser","first","res","catch","err","Provider","value","exact","path","render","StoreHome","ProductSale","ProductDetail","NotFound","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8f3f4f90.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBbYjZBfxOBX2ay6jTpN9dCw0PXJ4e1rQ4\",\n    authDomain: \"manbocash-7aa7e.firebaseapp.com\",\n    databaseURL: \"https://manbocash-7aa7e.firebaseio.com\",\n    projectId: \"manbocash-7aa7e\",\n    storageBucket: \"manbocash-7aa7e.appspot.com\",\n    messagingSenderId: \"387864702922\",\n    appId: \"1:387864702922:web:04ab97e7a54b1807\"\n  };\n  \n  firebase.initializeApp(config);\n\n  export default firebase;\n  ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport FavoriteIcon from '@material-ui/icons/Favorite'\n\n\nexport default function ({ displayImage, displayName, cash }) {\n    return (\n        <Box\n            display=\"flex\"\n            bgcolor={'#f2f2f2'}\n            height=\"48px\"\n            px={3}\n            py={1}\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n        >\n            <Box display=\"flex\" alignItems=\"center\">\n                <Avatar src={displayImage} alt=\"\" />\n                <Box px={1}><Typography fontSize={11} >{displayName}</Typography></Box>\n            </Box>\n            <Link to=\"/api/couponbox\" style={{ \"textDecoration\": \"none\" }}>\n                <Box\n\n                    fontSize={13}\n                    padding={0.5}\n                    width={70}\n                    height={17}\n                    textAlign=\"center\" borderRadius={6} color={\"#fff\"} bgcolor={\"#72B4B4\"}>\n                    내 쿠폰함\n                </Box>\n            </Link>\n            <Box display=\"flex\" alignItems=\"center\">\n                <Box p={1} fontSize={13}>보유캐시</Box>\n                <Box display=\"flex\"\n                    borderRadius={'8px'}\n                    bgcolor={\"#fff\"}\n                    minWidth=\"80px\"\n                    height=\"20px\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    px={1}\n                >\n                    <FavoriteIcon style={{ color: '#8177E6', fontSize: '14px' }} />\n                    <Box fontSize={13} color={'#72B4B4'}>{cash}캐시</Box>\n                </Box>\n            </Box>\n        </Box>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StoreStatus from './StoreStatus';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport { Box } from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\nimport firebase from './firebase';\nimport subscribe from \"subscribe-event\";\nimport * as _ from 'underscore';\n\nconst db = firebase.firestore();\nconst useStyles = makeStyles(theme => ({\n    list: {\n        background: '#f2f2f2',\n        padding: '0 23px 15px',\n        height: '100%'\n    },\n    listItem: {\n        background: '#fff',\n        marginBottom: '7px',\n        padding: \"10px 15px\",\n    },\n    itemImage: {\n        width: '70px',\n        height: \"auto\",\n        paddingLeft: \"10px\"\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    itemDesc: {\n        paddingLeft: \"15px\",\n    }\n}));\n\nexport default ({ items, handleUser, handleItems }) => {\n    let history = useHistory();\n    const classes = useStyles();\n    const { uid } = useParams();\n\n    const [page, setPage] = useState(1);\n    const [isBottom, setIsBottom] = useState(false);\n\n    const [displayName, setDisplayName] = useState('');\n    const [displayImage, setDisplayImage] = useState('');\n    const [cash, setCash] = useState(0);\n\n    const handleListItemClick = (event, goodsCode) => {\n        console.log('goodsCode: ' + goodsCode);\n        history.push(`/goods/${goodsCode}`);\n    }\n\n    // 스크롤 핸들링.\n    const scrollHandler = _.throttle(() => {\n        let { innerHeight } = window;\n        let { scrollHeight } = document.body;\n        // IE에서는 document.documentElement 를 사용.\n        let scrollTop =\n            (document.documentElement && document.documentElement.scrollTop) ||\n            document.body.scrollTop;\n        // 스크롤시, 브라우저의 가장 밑에서 페이지수 증가.\n\n        if (innerHeight + scrollTop === scrollHeight && isBottom === false) {\n\n            setPage(prev => prev + 1);\n            setIsBottom(true);\n\n        }\n    }, 300);\n\n    useEffect(() => {\n        const unsubscribe = subscribe(window, \"scroll\", scrollHandler);\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    // 페이징 처리\n    useEffect(() => {\n        const tmpItems = [];\n        db.collection('productsByOne').orderBy('realPrice').limit(10 * page).get()\n            .then(snapshot => {\n                snapshot.forEach(el => {\n                    tmpItems.push(el.data());\n                });\n                handleItems(tmpItems);\n                setIsBottom(false);\n\n            });\n    }, [page]);\n\n    useEffect(() => {\n        db.collection('members').doc(uid)\n            .onSnapshot(doc => {\n                setDisplayImage(doc.data().photoUrl);\n                setDisplayName(doc.data().nickName);\n                setCash(Number(doc.data().cash));\n                handleUser({\n                    'uid': uid,\n                    'displayImage': doc.data().photoUrl,\n                    'displayName': doc.data().nickName,\n                    'cash': Number(doc.data().cash),\n                });\n            })\n\n        // 뒤로가기를 눌러 돌아왔을 때 예전 위치로 찾아가려는 로직을 넣어야..(미해결)\n        window.scrollTo(0, 0);\n    }, []);\n\n    return (\n        <Fragment>\n            <StoreStatus displayImage={displayImage} displayName={displayName} cash={cash} />\n            <List className={classes.list} component=\"nav\">\n                {\n                    items.map(({ goodsImgS, goodsCode, goodsName, brandName, realPrice }) => {\n                        return (\n                            <ListItem className={classes.listItem}\n                                button\n                                onClick={event => handleListItemClick(event, goodsCode)}\n                                key={goodsCode}\n                            >\n                                <ListItemAvatar >\n                                    <Avatar src={goodsImgS}\n                                        className={classes.large}\n                                        variant=\"square\"\n                                        alt={goodsCode}\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText\n                                    className={classes.itemDesc}\n                                    primary={goodsName}\n                                    secondary={\n                                        <Fragment >\n                                            <Box className={classes.itemDesc}>\n                                                <Box fontSize={14} height={14}>{brandName}</Box>\n                                                <Box fontSize={16} height={14} color={'#72B4B4'} textAlign=\"right\"\n                                                >{realPrice}캐시</Box>\n                                            </Box>\n                                        </Fragment>\n                                    } />\n                            </ListItem>\n                        )\n                    })\n                }\n            </List>\n        </Fragment>\n    );\n}\n\n\n\n","import React from 'react';\n\nexport default () => {\n    return (\n        <h1>Not Found....</h1>\n    )\n}","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport StoreStatus from './StoreStatus';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport { UserContext } from './App';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n\n    },\n    small: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n        paddingLeft: '10px'\n    },\n    large: {\n        width: theme.spacing(50),\n        height: theme.spacing(50),\n    },\n    btn_buy: {\n        '&:hover': {\n            cursor: 'pointer',\n            background: '#175656'\n        }\n    }\n}));\n\nexport default ({ items }) => {\n    let location = useLocation();\n    let { goods_code } = useParams();\n    let history = useHistory();\n    const [isLoad, setLoad] = useState(false);\n    const [goodsImgB, setGoodsImgB] = useState(\"\");\n    const [goodsCode, setGoodsCode] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [realPrice, setRealPrice] = useState(\"\");\n    const [goodsName, setGoodsName] = useState(\"\");\n    const [brandName, setBrandName] = useState(\"\");\n    const [brandIconImg, setBrandIconImg] = useState(\"\");\n    const classes = useStyles();\n\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        items\n            .filter(item => item.goodsCode === goods_code)\n            .forEach(item => {\n                setGoodsImgB(item.goodsImgB);\n                setContent(item.content);\n                setGoodsCode(item.goodsCode);\n                setRealPrice(item.realPrice);\n                setBrandName(item.brandName);\n                setBrandIconImg(item.brandIconImg);\n                setGoodsName(item.goodsName);\n                setLoad(true);\n            });\n\n        window.scrollTo(0, 0)\n\n    }, []);\n\n    const handleBuyClick = (event) => {\n        history.push(`/goods/sale/${goodsCode}`);\n    };\n\n    return (\n\n        <Fragment>\n            <StoreStatus\n                displayImage={user.displayImage}\n                displayName={user.displayName}\n                cash={user.cash}\n            />\n            {!isLoad ? <Box>loading....</Box> : (<Box pb={4} >\n                <Box textAlign=\"center\" p={2} m={\"auto\"} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Avatar src={goodsImgB} className={classes.large} variant='square' />\n                </Box>\n                <Box textAlign=\"center\" p={2}>\n                    <Box>{goodsName}</Box>\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                        <Box color=\"gray\" fontSize={14}>{brandName}</Box>\n                        <Avatar src={brandIconImg} className={classes.small} />\n                    </Box>\n                    <Box color=\"#72B4B4\">{realPrice}캐시</Box>\n                </Box>\n                <Box\n                    bgcolor=\"#F2F2F2\"\n                    fontSize=\"12\"\n                    textAlign=\"center\"\n                    height=\"50px\"\n                    lineHeight=\"50px\">상세정보({goodsCode})</Box>\n                <Box px={4} py={2} fontSize=\"13px\" >\n\n                    {content.split('\\n').map(line => {\n                        return (<span>{line}<br /></span>)\n                    })}\n\n                </Box>\n                <Box\n                    className={classes.btn_buy}\n                    bgcolor=\"#72B4B4\"\n                    height=\"50px\"\n                    textAlign=\"center\"\n                    color=\"white\"\n                    lineHeight=\"50px\"\n                    onClick={(event) => handleBuyClick(event)}\n                >\n                    구매하기\n                </Box>\n            </Box>)}\n        </Fragment>\n    )\n}\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport StoreStatus from './StoreStatus';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { UserContext } from './App';\n\nconst useStyles = makeStyles(theme => ({\n    medium: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    small: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n        paddingLeft: '10px'\n    },\n    divider: {\n        height: '6px',\n        backgroundColor: '#f2f2f2'\n    }\n}));\n\n\nexport default ({ items }) => {\n    const classes = useStyles();\n    let { goods_code } = useParams();\n    const [item, setItem] = useState({});\n\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        items\n            .filter(item => item.goodsCode === goods_code)\n            .forEach(item => {\n                const tmpItem = {\n                    goodsName: item.goodsName,\n                    brandName: item.brandName,\n                    realPrice: item.realPrice,\n                    goodsImgS: item.goodsImgS,\n                    brandIconImg: item.brandIconImg\n                };\n                setItem(tmpItem);\n            });\n\n        window.scrollTo(0, 0);\n    }, []);\n    return (\n        <Fragment>\n            <Box>\n                <StoreStatus displayImage={user.displayImage} displayName={user.displayName} cash={user.cash} />\n                <Box>\n                    <Box height={\"\"} display=\"flex\" alignItems=\"center\">\n                        <Box px={4}>\n                            <Avatar src={item.goodsImgS} className={classes.medium} variant=\"square\" />\n                        </Box>\n                        <Box pr={4}>\n                            <Box>{item.goodsName}</Box>\n                            <Box display=\"flex\" alignItems=\"center\">\n                                <Box color=\"gray\" fontSize={14}>{item.brandName}</Box>\n                                <Avatar src={item.brandIconImg} className={classes.small} />\n                            </Box>\n                            <Box color=\"#72B4B4\">{item.realPrice}캐시</Box>\n                        </Box>\n                    </Box>\n                    <Divider className={classes.divider} />\n                    <Box py={3}>\n                        <Box display=\"flex\" px={4} py={0} justifyContent=\"space-between\">\n                            <Box>총 보유 캐시</Box>\n                            <Box>{user.cash}캐시</Box>\n                        </Box>\n                        <Box display=\"flex\" px={4} py={0} justifyContent=\"space-between\">\n                            <Box>구매 캐시</Box>\n                            <Box>{item.realPrice}캐시</Box>\n                        </Box>\n                    </Box>\n                    <Divider className={classes.divider} />\n                    <Box display=\"flex\" py={3} px={4} justifyContent=\"space-between\">\n                        <Box>캐시 잔액</Box>\n                        <Box color=\"#72B4B4\">{user.cash - parseInt(item.realPrice)}캐시</Box>\n                    </Box>\n                    <Divider className={classes.divider} />\n                    <Box py={5}>\n                        <Box textAlign=\"center\" lineHeight=\"25px\">\n                            구매완료 버튼을 누른 후, <br />\n                            <span style={{ color: '#72B4B4' }}>내 쿠폰함</span>으로 이동하니<br />\n                        그곳에서 원하는 상품바코드를 이용해<br />\n                        구매하시면 됩니다.<br />\n                        </Box>\n                        <Box textAlign=\"center\" pt={5} pb={2} style={{ textDecoration: 'underline' }}><a>취소하기</a></Box>\n                    </Box>\n                    <Box textAlign=\"center\" bgcolor=\"#72B4B4\" py={2} color=\"white\">구매완료</Box>\n                </Box>\n            </Box>\n        </Fragment>\n    )\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport firebase from './firebase';\nimport { BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom';\nimport StoreHome from './StoreHome';\nimport NotFound from './NotFound';\nimport ProductDetail from './ProductDetail';\nimport ProductSale from './ProductSale';\nimport './App.css';\n\nconst db = firebase.firestore();\nexport const UserContext = React.createContext();\n\nfunction App() {\n\n  const [items, setItems] = useState([]);\n  const [isLoad, setLoad] = useState(false);\n\n  const [user, setUser] = useState({});\n\n  // handle user 데이터\n  const handleUser = ({ uid, displayName, displayImage, cash }) => {\n    const user = { uid, displayName, displayImage, cash };\n    setUser(user);\n  }\n\n  // handle items 데이터\n  const handleItems = (items) => {\n    setItems(items);\n  }\n\n  // 처음에 한 번 기본 데이터(10개) 불러오기 + 스크롤이벤트 처리\n  useEffect(() => {\n    first().then(res => {\n      console.log('기본 데이타 셋업');\n    }).catch(err => console.log(\"err\", err));\n  }, []);\n\n  function first() {\n    const items = [];\n    var first = db.collection('productsByOne').orderBy('realPrice').limit(10);\n    return first.get().then(snapshot => {\n\n      snapshot.forEach(el => {\n        items.push(el.data());\n      })\n      setItems(items);\n      setLoad(true);\n    });\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n      <Fragment>\n        {!isLoad ? <div>Loading...</div> :\n\n          <Router>\n            <Switch>\n              <Route exact path=\"/:uid\" render={() => <StoreHome items={items} handleUser={handleUser} handleItems={handleItems} />} />\n              <Route path=\"/goods/sale/:goods_code\" render={() => <ProductSale user={user} items={items} />} />\n              <Route path=\"/goods/:goods_code\" render={() => <ProductDetail user={user} items={items} />} />\n              <Route>\n                <NotFound />\n              </Route>\n            </Switch>\n          </Router>}\n      </Fragment>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}